/*
Vivek was quite bored with the lockdown, so he came up with an interesting task. He successfully completed this task and now, he would like you to solve it.

You are given two strings A and B, each with length N. Let's index the characters in each string from 0 ― for each i (0≤i<N), the i+1-th characters of A and B are denoted by Ai and Bi respectively. You should convert A to B by performing operations of the following type:

Choose a subset S of the set {0,1,…,N−1}.
Let c be the alphabetically smallest character among Ax for all x∈S.
For each x∈S, replace Ax by c.
You should find the smallest necessary number of operations or report that it is impossible to convert A to B. If it is possible, you also need to find one way to convert A to B using this smallest number of operations. If there are multiple solutions, you may find any one.

Input
The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains a single integer N.
The second line contains a single string A.
The third line contains a single string B.
Output
For each test case:

If it is impossible to convert A to B, print a single line containing the integer −1.
Otherwise, first, print a line containing a single integer K ― the minimum number of operations.
Then, print K lines describing the operations. Each of these lines should contain a positive integer Z, followed by a space and Z pairwise distinct space-separated integers from the set {0,1,…,N−1} ― the elements of S.
Constraints
1≤T≤20
1≤N≤103
|A|=|B|=N
A and B contain only lowercase English letters
Subtasks
Subtask #1 (30 points): B contains only characters 'a' and 'b'

Subtask #2 (70 points): original constraints

Example Input
3
5
abcab
aabab
3
aaa
aab
2
de
cd
Example Output
2
3 1 2 4
3 0 1 3
-1
-1
Explanation
Example case 1:

First, we can choose S=(1,2,4), so the character c is 'b' and the string A after this operation is "abbab".
Then, we choose S=(0,1,3), so c is 'a', and A becomes "aabab".
There is no way to convert A to B in only one operation.
Example case 2: We can see that it is impossible to convert A to B since c is always 'a'.

Example case 3: We can see again that it is impossible to convert A to B since c cannot be 'c'.
*/
               #include<bits/stdc++.h>
                using namespace std;

                #pragma GCC push_options
                #pragma GCC optimize ("unroll-loops")

                #define watch(x) cout << (#x) << " is " << (x) << "\n"
                #define watch2(x,y) cout <<(#x)<<" is "<<(x)<<" and "<<(#y)<<" is "<<(y)<<"\n"

                #define pow2(x) ((x)*(x))
                #define ll long long
                #define ld long double
                #define eb emplace_back
                #define pb push_back
                #define pf push_front

                #define mod 1000000007
                #define clock (clock() * 1000.0 / CLOCKS_PER_SEC)

                #define mp make_pair
                #define ff first
                #define ss second
                #define null NULL

                #define all(c) (c).begin(),(c).end()
                #define nl "\n"
                #define SZ(x) ((int)x.size())

                typedef vector<ll> vl;
                typedef vector< vl > vvl;
                typedef pair< ll,ll> pll;
                typedef map< ll,ll> mll;
                    ll n;
                    string a;
                    string b;
                    void read(){
                        cin>>n;
                    cin>>a;
                    cin>>b;
                    }
                 void solve(){
                      vector<vector<int> > ans;
                    for(auto i=0;i<n;i++){
                        if(a[i]<b[i]){
                        cout<<-1<<" ";cout<<nl;
                        return;
                    }
                    }
                    for(char c='z';c>='a';c--){
                        vector<int>pos;
                        bool ok=false;
                        for(auto i=0;i<n;i++){
                        if(b[i]==c && a[i]!=c)
                            pos.pb(i);
                        }
                        if(!ok && !pos.empty()){
                            for(auto i=0;i<n;i++){
                                if(a[i]==c){
                                    pos.pb(i);
                                     ok=true;
                                }
                            }
                        }
                        if(!ok && !pos.empty()){
                            cout<<-1<<" ";
                            cout<<nl;
                            return;
                        }
                        if(!pos.empty()) ans.pb(pos);
                        for(int i: pos) {
                                        a[i] = c;
                                }
                    }
                    cout<<SZ(ans)<<endl;
                    for(auto li: ans) {
                                cout << SZ(li) << " ";
                                for(int x: li) cout << x << " ";
                                cout << endl;
                        }
                }
                int main()
                {
                    ios_base::sync_with_stdio(false);
                    cin.tie(0);
                    cout.tie(0);

                    ll t;
                    cin >> t;
                    while(t--)
                    {
                    read();
                    solve();
                    }
                    return 0;
                }
